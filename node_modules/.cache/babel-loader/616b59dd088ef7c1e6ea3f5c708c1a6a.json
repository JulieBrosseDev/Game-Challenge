{"ast":null,"code":"var _jsxFileName = \"/home/julie/game-challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      isLoading: true,\n      //    dateCut: '', \n      dataKeys: [],\n      dataValues: [],\n      questionResponseArray: [],\n      number: 0\n    };\n  }\n\n  async componentDidMount() {\n    //insert the current date in the url so we only display \n    const {\n      data\n    } = await axios(`https://opentdb.com/api.php?amount=10`); // go through all results (return objects)   \n\n    const results = data.results;\n    console.log(\"RESULTS : \" + results); // for each result go through all keys (return an array of keys)\n\n    const keys = results.map((result, i) => {\n      return Object.keys(result);\n    });\n    console.log(keys); // for each result go through all values (return an array of results)\n\n    const values = results.map((result, i) => {\n      return Object.values(result);\n    });\n    const questionResponse = results.map(result => {\n      return `${Object.values(result)[3]}`;\n    });\n\n    const setNumber = () => {\n      return this.state.number + 1;\n    };\n\n    this.setState({\n      data,\n      isLoading: false,\n      number: setNumber(),\n      dataKeys: keys,\n      dataValues: values,\n      questionResponseArray: questionResponse //          categories: \n      //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n\n    });\n    console.log(\"HELOOOOOOOOOOO\" + this.state.questionResponseArray[0]); // const datasArray = data.results.map((result, i) => {\n    //   return ({...result})\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? \"IT DIDN'T LOAD\" : \"IT HAS LOADED\", /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, this.state.questionResponseArray), this.state.questionResponse);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/julie/game-challenge/src/App.js"],"names":["React","Component","Question","axios","App","state","data","isLoading","dataKeys","dataValues","questionResponseArray","number","componentDidMount","results","console","log","keys","map","result","i","Object","values","questionResponse","setNumber","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGV;AACIC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,qBAAqB,EAAE,EANjB;AAONC,MAAAA,MAAM,EAAE;AAPF,KADkB;AAAA;;AAY1B,QAAMC,iBAAN,GAAyB;AACrB;AACF,UAAM;AAACN,MAAAA;AAAD,QAAS,MAAMH,KAAK,CAAE,uCAAF,CAA1B,CAFuB,CAG3B;;AACM,UAAMU,OAAO,GAAGP,IAAI,CAACO,OAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,OAA3B,EALqB,CAMnB;;AACF,UAAMG,IAAI,GAAGH,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AACtC,aAAOC,MAAM,CAACJ,IAAP,CAAYE,MAAZ,CAAP;AACD,KAFY,CAAb;AAIAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAXqB,CAYnB;;AAEA,UAAMK,MAAM,GAAGR,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AACxC,aAAOC,MAAM,CAACC,MAAP,CAAcH,MAAd,CAAP;AACD,KAFc,CAAf;AAIA,UAAMI,gBAAgB,GAAGT,OAAO,CAACI,GAAR,CAAaC,MAAD,IAAY;AAC/C,aAAQ,GAAEE,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsB,CAAtB,CAAyB,EAAnC;AACD,KAFwB,CAAzB;;AAIA,UAAMK,SAAS,GAAG,MAAM;AACtB,aAAO,KAAKlB,KAAL,CAAWM,MAAX,GAAoB,CAA3B;AACD,KAFD;;AAIE,SAAKa,QAAL,CAAc;AACZlB,MAAAA,IADY;AAEZC,MAAAA,SAAS,EAAE,KAFC;AAGZI,MAAAA,MAAM,EAAEY,SAAS,EAHL;AAIZf,MAAAA,QAAQ,EAAEQ,IAJE;AAKZP,MAAAA,UAAU,EAAEY,MALA;AAMZX,MAAAA,qBAAqB,EAAEY,gBANX,CAQtB;AACA;;AATsB,KAAd;AAaAR,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKV,KAAL,CAAWK,qBAAX,CAAiC,CAAjC,CAA/B,EAvCiB,CAwCjB;AACA;AACA;AAED;;AAMPe,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,KAAL,CAAWE,SAAX,GACC,gBADD,GAEC,eAHN,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWK,qBAAhB,CARJ,EAUG,KAAKL,KAAL,CAAWiB,gBAVd,CADF;AAgBD;;AA/EyB;;AAiF5B,eAAelB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    data: {},\n    isLoading: true,\n//    dateCut: '', \n    dataKeys: [],\n    dataValues: [],\n    questionResponseArray: [],\n    number: 0\n}\n\n\n  async componentDidMount(){\n      //insert the current date in the url so we only display \n    const {data} = await axios(`https://opentdb.com/api.php?amount=10`)\n// go through all results (return objects)   \n      const results = data.results\n      console.log(\"RESULTS : \" + results)\n        // for each result go through all keys (return an array of keys)\n      const keys = results.map((result, i) => {\n        return Object.keys(result)\n      })\n\n      console.log(keys)\n        // for each result go through all values (return an array of results)\n\n        const values = results.map((result, i) => {\n          return Object.values(result)\n        })\n      \n        const questionResponse = results.map((result) => {\n          return `${Object.values(result)[3]}`\n        })\n\n        const setNumber = () => {\n          return this.state.number + 1\n        }\n    \n          this.setState({\n            data, \n            isLoading: false,\n            number: setNumber(),\n            dataKeys: keys,\n            dataValues: values,\n            questionResponseArray: questionResponse\n            \n  //          categories: \n  //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n      \n          })\n\n          console.log(\"HELOOOOOOOOOOO\" + this.state.questionResponseArray[0])\n          // const datasArray = data.results.map((result, i) => {\n          //   return ({...result})\n          // })\n\n        }\n\n    \n\n\n\n  render(){\n    return (\n      <div className=\"\">\n          {this.state.isLoading\n          ? \"IT DIDN'T LOAD\"\n          : \"IT HAS LOADED\"\n          }\n      {/* <Question results={this.state.data.results}/> */}\n        {/* \"THE CATEGORY : \" + this.state.data.results} */}\n\n          <h1>{this.state.questionResponseArray}</h1>\n\n        {this.state.questionResponse}\n\n\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/julie/game-challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      isLoading: true,\n      //    dateCut: '', \n      results: [],\n      firstTestCategory: \"\",\n      questions: []\n    };\n  }\n\n  async componentDidMount() {\n    //insert the current date in the url so we only display \n    const {\n      data\n    } = await axios(`https://opentdb.com/api.php?amount=10`); // go through all results (return objects)   \n\n    const results = data.results;\n    console.log(\"RESULTS : \" + results); // for each result go through all keys (return an array of keys)\n    // for each result go through all values (return an array of results)\n\n    map(event => {\n      return event;\n    });\n    this.setState({\n      data,\n      isLoading: false,\n      firstTestCategory: data.results[0].category,\n      results: data.results //          categories: \n      //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n\n    });\n    console.log(\"DATA KEYS : \" + Object.keys(data.results[0]));\n    console.log(\"QUESTIONS : \" + Object.values(questions));\n    console.log(data.results[0].category);\n    console.log(this.state.results); // const datasArray = data.results.map((result, i) => {\n    //   return ({...result})\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? \"IT DIDN'T LOAD\" : \"IT HAS LOADED\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/julie/game-challenge/src/App.js"],"names":["React","Component","Question","axios","App","state","data","isLoading","results","firstTestCategory","questions","componentDidMount","console","log","map","event","setState","category","Object","keys","values","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGV;AACIC,MAAAA,OAAO,EAAE,EAJH;AAKNC,MAAAA,iBAAiB,EAAE,EALb;AAMNC,MAAAA,SAAS,EAAE;AANL,KADkB;AAAA;;AAW1B,QAAMC,iBAAN,GAAyB;AACrB;AACF,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMH,KAAK,CAAE,uCAAF,CAA1B,CAFuB,CAG3B;;AACM,UAAMK,OAAO,GAAGF,IAAI,CAACE,OAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeL,OAA3B,EALqB,CAMnB;AAEA;;AACFM,IAAAA,GAAG,CAACC,KAAK,IAAI;AACb,aAAOA,KAAP;AACD,KAFI,CAAH;AAII,SAAKC,QAAL,CAAc;AACZV,MAAAA,IADY;AAEZC,MAAAA,SAAS,EAAE,KAFC;AAGZE,MAAAA,iBAAiB,EAAEH,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBS,QAHvB;AAIZT,MAAAA,OAAO,EAAEF,IAAI,CAACE,OAJF,CAMtB;AACA;;AAPsB,KAAd;AAWAI,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBK,MAAM,CAACC,IAAP,CAAYb,IAAI,CAACE,OAAL,CAAa,CAAb,CAAZ,CAA7B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBK,MAAM,CAACE,MAAP,CAAcV,SAAd,CAA7B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBS,QAA5B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWG,OAAvB,EA3BiB,CA4BjB;AACA;AACA;AAED;;AAMPa,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,KAAL,CAAWE,SAAX,GACC,gBADD,GAEC,eAHN,CADF;AAYD;;AA9DyB;;AAgE5B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    data: {},\n    isLoading: true,\n//    dateCut: '', \n    results: [],\n    firstTestCategory: \"\",\n    questions: []\n}\n\n\n  async componentDidMount(){\n      //insert the current date in the url so we only display \n    const {data} = await axios(`https://opentdb.com/api.php?amount=10`)\n// go through all results (return objects)   \n      const results = data.results\n      console.log(\"RESULTS : \" + results)\n        // for each result go through all keys (return an array of keys)\n\n        // for each result go through all values (return an array of results)\n      map(event => {\n      return event\n    })\n    \n          this.setState({\n            data, \n            isLoading: false,\n            firstTestCategory: data.results[0].category,\n            results: data.results\n            \n  //          categories: \n  //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n      \n          })\n\n          console.log(\"DATA KEYS : \" + Object.keys(data.results[0]))\n          console.log(\"QUESTIONS : \" + Object.values(questions))\n          console.log(data.results[0].category)\n          console.log(this.state.results)\n          // const datasArray = data.results.map((result, i) => {\n          //   return ({...result})\n          // })\n\n        }\n\n    \n\n\n\n  render(){\n    return (\n      <div className=\"\">\n          {this.state.isLoading\n          ? \"IT DIDN'T LOAD\"\n          : \"IT HAS LOADED\"\n          }\n        \n      {/* <Question results={this.state.data.results}/> */}\n        {/* \"THE CATEGORY : \" + this.state.data.results} */}\n\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
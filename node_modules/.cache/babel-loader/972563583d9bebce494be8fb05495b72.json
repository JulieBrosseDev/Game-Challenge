{"ast":null,"code":"var _jsxFileName = \"/home/julie/game-challenge/src/App.js\";\nimport { Component, Fragment } from 'react';\nimport React from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      isLoading: true,\n      dataKeys: [],\n      dataValues: [],\n      questionsArray: [],\n      fakeAnswersArray: [],\n      trueAnswersArray: [],\n      number: 0,\n      counter: 0,\n      totalClicks: 0\n    };\n\n    this.setNumber = () => {\n      return this.state.number + 1;\n    };\n\n    this.direction = () => {\n      const flexDirection = [\"row\", \"rowreverse\"];\n      return flexDirection[Math.floor(Math.random() * 2)];\n    };\n\n    this.answerValidation = () => {\n      const newCounter = this.state.counter + 1;\n      const newClick = this.state.totalClicks + 1;\n      this.setState({\n        counter: newCounter,\n        number: this.setNumber(),\n        totalClicks: newClick\n      });\n      this.checkIfEndOfGame();\n    };\n\n    this.checkIfEndOfGame = () => {\n      return this.state.totalClicks = 10 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }\n      }, \"GAME ENDED YOU have points\"), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }\n      }, \"RESTART\")) : \"lkscdl\";\n    };\n\n    this.noValidation = () => {\n      const newCounter = this.state.counter + 1;\n      this.setState({\n        number: this.setNumber(),\n        totalClicks: newCounter\n      });\n      this.checkIfEndOfGame();\n    };\n\n    this.gameRestart = () => {\n      this.setState({\n        data: {},\n        isLoading: true,\n        dataKeys: [],\n        dataValues: [],\n        questionsArray: [],\n        fakeAnswersArray: [],\n        trueAnswersArray: [],\n        number: 0,\n        counter: 0,\n        totalClicks: 0\n      });\n    };\n  }\n\n  async componentDidMount() {\n    //insert the current date in the url so we only display \n    const {\n      data\n    } = await axios(`https://opentdb.com/api.php?amount=10&type=boolean`); // go through all results (return objects)   \n\n    const results = data.results;\n    console.log(\"RESULTS : \" + results);\n    const keys = results.map((result, i) => {\n      return Object.keys(result);\n    });\n    console.log(keys);\n    const values = results.map((result, i) => {\n      return Object.values(result);\n    });\n    const questions = results.map(result => {\n      return `${Object.values(result)[3]}`;\n    });\n    const fakeAnswers = results.map(result => {\n      return `${Object.values(result)[5]}`;\n    });\n    const fakeAnswersArrays = fakeAnswers.map(answer => {\n      return answer.split(',');\n    });\n    const trueAnswers = results.map(result => {\n      return `${Object.values(result)[4]}`;\n    });\n    this.setState({\n      data,\n      isLoading: false,\n      dataKeys: keys,\n      dataValues: values,\n      questionsArray: questions,\n      fakeAnswersArray: fakeAnswersArrays,\n      trueAnswersArray: trueAnswers\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, this.state.totalClicks < 10 ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"gameContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"counter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, this.state.counter), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, this.state.questionsArray[this.state.number]), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"responsesContainer\",\n      class: this.direction(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.noValidation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, this.state.fakeAnswersArray[this.state.number]), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.answerValidation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, this.state.trueAnswersArray[this.state.number]))) : \"null\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/julie/game-challenge/src/App.js"],"names":["Component","Fragment","React","Question","axios","App","state","data","isLoading","dataKeys","dataValues","questionsArray","fakeAnswersArray","trueAnswersArray","number","counter","totalClicks","setNumber","direction","flexDirection","Math","floor","random","answerValidation","newCounter","newClick","setState","checkIfEndOfGame","noValidation","gameRestart","componentDidMount","results","console","log","keys","map","result","i","Object","values","questions","fakeAnswers","fakeAnswersArrays","answer","split","trueAnswers","render"],"mappings":"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","sourcesContent":["import {Component, Fragment} from 'react';\nimport React from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    data: {},\n    isLoading: true,\n    dataKeys: [],\n    dataValues: [],\n    questionsArray: [],\n    fakeAnswersArray: [],\n    trueAnswersArray: [],\n    number: 0,\n    counter: 0,\n    totalClicks: 0,\n}\n\n\nsetNumber = () => {\n  return this.state.number + 1\n}\n\ndirection = () => {\n   const flexDirection = [\"row\", \"rowreverse\"];\n   return flexDirection[Math.floor(Math.random() * 2)];\n}\n\n\nanswerValidation = () => {\n  const newCounter = this.state.counter + 1\n  const newClick = this.state.totalClicks + 1\n  this.setState({\n    counter: newCounter,\n    number: this.setNumber(),\n    totalClicks: newClick,\n  })\n  this.checkIfEndOfGame()\n}\n\n\ncheckIfEndOfGame = () => {\n  return this.state.totalClicks = 10 \n  ? \n  <div>\n    <p>GAME ENDED YOU have points</p>\n    <button>RESTART</button>\n  </div>\n  : \"lkscdl\"\n}\n\nnoValidation = () => {\n  const newCounter = this.state.counter + 1\n\n  this.setState({\n    number: this.setNumber(),\n    totalClicks: newCounter,\n})\nthis.checkIfEndOfGame()\n}\n\ngameRestart = () => {\n  this.setState({\n      data: {},\n      isLoading: true,\n      dataKeys: [],\n      dataValues: [],\n      questionsArray: [],\n      fakeAnswersArray: [],\n      trueAnswersArray: [],\n      number: 0,\n      counter: 0,\n      totalClicks: 0\n  })\n}\n\n\n  async componentDidMount(){\n      //insert the current date in the url so we only display \n    const {data} = await axios(`https://opentdb.com/api.php?amount=10&type=boolean`)\n// go through all results (return objects)   \n      const results = data.results\n      console.log(\"RESULTS : \" + results)\n      const keys = results.map((result, i) => {\n        return Object.keys(result)\n      })\n\n      console.log(keys)\n\n        const values = results.map((result, i) => {\n          return Object.values(result)\n        })\n      \n        const questions = results.map((result) => {\n          return `${Object.values(result)[3]}`\n        })\n\n        const fakeAnswers = results.map((result) => {\n          return `${Object.values(result)[5]}`\n        })\n\n        const fakeAnswersArrays  = fakeAnswers.map(answer => {\n          return answer.split(',')\n        })        \n\n        const trueAnswers = results.map((result) => {\n          return `${Object.values(result)[4]}`\n        })\n\n\n\n          this.setState({\n            data, \n            isLoading: false,\n            dataKeys: keys,\n            dataValues: values,\n            questionsArray: questions,\n            fakeAnswersArray: fakeAnswersArrays,\n            trueAnswersArray: trueAnswers\n          })\n        }\n\n\n\n  render(){\n    return (\n      <div>\n          {this.state.totalClicks < 10\n          ? \n          <div id=\"gameContainer\">\n            <div id=\"counter\">{this.state.counter}</div>\n            <div id=\"question\">{this.state.questionsArray[this.state.number]}</div>\n            <div id=\"responsesContainer\" class={this.direction()}>\n              <div onClick={this.noValidation}>{this.state.fakeAnswersArray[this.state.number]}</div>\n              <div onClick={this.answerValidation}>{this.state.trueAnswersArray[this.state.number]}</div>\n            </div>\n          </div>\n          : \"null\"\n          }\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
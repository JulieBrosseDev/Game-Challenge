{"ast":null,"code":"var _jsxFileName = \"/home/julie/game-challenge/src/App.js\";\nimport { Component, Fragment } from 'react';\nimport React from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      isLoading: true,\n      //    dateCut: '', \n      dataKeys: [],\n      dataValues: [],\n      questionsArray: [],\n      fakeAnswersArray: [],\n      trueAnswersArray: [],\n      number: 0,\n      counter: 0,\n      totalClicks: 0\n    };\n\n    this.displayFakeAnswers = () => {\n      const display = this.state.fakeAnswersArray.map(answer => {\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 5\n          }\n        }, \"return \", /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 12\n          }\n        }, answer), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }\n        }));\n      });\n      return display;\n    };\n\n    this.setNumber = () => {\n      return this.state.number + 1;\n    };\n\n    this.answerValidation = () => {\n      const newCounter = this.state.counter + 1;\n      this.setState({\n        counter: newCounter,\n        number: this.setNumber(),\n        totalClicks: newCounter\n      });\n    };\n  }\n\n  async componentDidMount() {\n    //insert the current date in the url so we only display \n    const {\n      data\n    } = await axios(`https://opentdb.com/api.php?amount=10`); // go through all results (return objects)   \n\n    const results = data.results;\n    console.log(\"RESULTS : \" + results); // for each result go through all keys (return an array of keys)\n\n    const keys = results.map((result, i) => {\n      return Object.keys(result);\n    });\n    console.log(keys); // for each result go through all values (return an array of results)\n\n    const values = results.map((result, i) => {\n      return Object.values(result);\n    });\n    const questions = results.map(result => {\n      return `${Object.values(result)[3]}`;\n    });\n    const fakeAnswers = results.map(result => {\n      return `${Object.values(result)[5]}`;\n    });\n    const fakeAnswersArrays = fakeAnswers.map(answer => {\n      return answer.split(',');\n    });\n    console.log(\"KAAAAAK\" + fakeAnswers);\n    const trueAnswers = results.map(result => {\n      return `${Object.values(result)[4]}`;\n    });\n    this.setState({\n      data,\n      isLoading: false,\n      dataKeys: keys,\n      dataValues: values,\n      questionsArray: questions,\n      fakeAnswersArray: fakeAnswersArrays,\n      trueAnswersArray: trueAnswers //          categories: \n      //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n\n    });\n    console.log(this.state.fakeAnswersArray[2]); // const datasArray = data.results.map((result, i) => {\n    //   return ({...result})\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, this.state.totalClicks < 10 ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"COUNTER : \", this.state.counter), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, this.state.questionsArray[this.state.number]), this.state.fakeAnswersArray[this.state.number], /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.answerValidation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, this.state.trueAnswersArray[this.state.number])) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"GAME ENDED YOu have \", this.state.counter, \" points\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/julie/game-challenge/src/App.js"],"names":["Component","Fragment","React","Question","axios","App","state","data","isLoading","dataKeys","dataValues","questionsArray","fakeAnswersArray","trueAnswersArray","number","counter","totalClicks","displayFakeAnswers","display","map","answer","setNumber","answerValidation","newCounter","setState","componentDidMount","results","console","log","keys","result","i","Object","values","questions","fakeAnswers","fakeAnswersArrays","split","trueAnswers","render"],"mappings":"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","sourcesContent":["import {Component, Fragment} from 'react';\nimport React from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    data: {},\n    isLoading: true,\n//    dateCut: '', \n    dataKeys: [],\n    dataValues: [],\n    questionsArray: [],\n    fakeAnswersArray: [],\n    trueAnswersArray: [],\n    number: 0,\n    counter: 0,\n    totalClicks: 0,\n}\n\ndisplayFakeAnswers = () => {\n  const display = this.state.fakeAnswersArray.map(answer => {\n    <div>\n    return <h1>{answer}</h1><br/>\n    </div>\n  })\n  return display\n}\n\nsetNumber = () => {\n  return this.state.number + 1\n}\n\nanswerValidation = () => {\n  const newCounter = this.state.counter + 1\n  this.setState({\n    counter: newCounter,\n    number: this.setNumber(),\n    totalClicks: newCounter,\n  })\n}\n\n\n  async componentDidMount(){\n      //insert the current date in the url so we only display \n    const {data} = await axios(`https://opentdb.com/api.php?amount=10`)\n// go through all results (return objects)   \n      const results = data.results\n      console.log(\"RESULTS : \" + results)\n        // for each result go through all keys (return an array of keys)\n      const keys = results.map((result, i) => {\n        return Object.keys(result)\n      })\n\n      console.log(keys)\n        // for each result go through all values (return an array of results)\n\n        const values = results.map((result, i) => {\n          return Object.values(result)\n        })\n      \n        const questions = results.map((result) => {\n          return `${Object.values(result)[3]}`\n        })\n\n        const fakeAnswers = results.map((result) => {\n          return `${Object.values(result)[5]}`\n        })\n\n        const fakeAnswersArrays  = fakeAnswers.map(answer => {\n          return answer.split(',')\n        })\n\n        console.log(\"KAAAAAK\"  + fakeAnswers)\n        \n\n\n        const trueAnswers = results.map((result) => {\n          return `${Object.values(result)[4]}`\n        })\n\n\n    \n          this.setState({\n            data, \n            isLoading: false,\n            dataKeys: keys,\n            dataValues: values,\n            questionsArray: questions,\n            fakeAnswersArray: fakeAnswersArrays,\n            trueAnswersArray: trueAnswers\n\n  //          categories: \n  //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n      \n          })\n\n          console.log(this.state.fakeAnswersArray[2])\n          // const datasArray = data.results.map((result, i) => {\n          //   return ({...result})\n          // })\n\n        }\n\n\n\n    \n\n\n\n  render(){\n    return (\n      <div className=\"\">\n          {this.state.totalClicks < 10\n          ? \n          <Fragment>\n            <div>COUNTER : {this.state.counter}</div>\n            <h1>{this.state.questionsArray[this.state.number]}</h1>\n            {this.state.fakeAnswersArray[this.state.number]\n            }\n            <div onClick={this.answerValidation}>{this.state.trueAnswersArray[this.state.number]}</div>\n          </Fragment>\n          : <p>GAME ENDED YOu have {this.state.counter} points</p>\n          }\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/julie/game-challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      isLoading: true,\n      //    dateCut: '', \n      dataKeys: [],\n      dataValues: [],\n      QuestionResponse: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    //insert the current date in the url so we only display \n    const {\n      data\n    } = await axios(`https://opentdb.com/api.php?amount=10`); // go through all results (return objects)   \n\n    const results = data.results;\n    console.log(\"RESULTS : \" + results); // for each result go through all keys (return an array of keys)\n\n    const keys = results.map((result, i) => {\n      return Object.keys(result);\n    }); // for each result go through all values (return an array of results)\n\n    const values = results.map((result, i) => {\n      return Object.values(result);\n    });\n    const QuestionResponse = results.map((result, i) => {\n      return `${Object.keys(result)[3] + \"  :  \" + Object.values(result)[3]} `;\n    });\n    this.setState({\n      data,\n      isLoading: false,\n      dataKeys: keys,\n      dataValues: values,\n      QuestionResponse //          categories: \n      //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n\n    }); // const datasArray = data.results.map((result, i) => {\n    //   return ({...result})\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? \"IT DIDN'T LOAD\" : \"IT HAS LOADED\", this.state.dataKeys.map((key, y) => {\n      return \"MY FIELD : \" + key[3];\n    }), this.state.QuestionResponse);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/julie/game-challenge/src/App.js"],"names":["React","Component","Question","axios","App","state","data","isLoading","dataKeys","dataValues","QuestionResponse","componentDidMount","results","console","log","keys","map","result","i","Object","values","setState","render","key","y"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGV;AACIC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,gBAAgB,EAAE;AANZ,KADkB;AAAA;;AAW1B,QAAMC,iBAAN,GAAyB;AACrB;AACF,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMH,KAAK,CAAE,uCAAF,CAA1B,CAFuB,CAG3B;;AACM,UAAMS,OAAO,GAAGN,IAAI,CAACM,OAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,OAA3B,EALqB,CAMnB;;AACF,UAAMG,IAAI,GAAGH,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AACtC,aAAOC,MAAM,CAACJ,IAAP,CAAYE,MAAZ,CAAP;AACD,KAFY,CAAb,CAPqB,CAUnB;;AAEA,UAAMG,MAAM,GAAGR,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AACxC,aAAOC,MAAM,CAACC,MAAP,CAAcH,MAAd,CAAP;AACD,KAFc,CAAf;AAIA,UAAMP,gBAAgB,GAAGE,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AAClD,aAAQ,GAAEC,MAAM,CAACJ,IAAP,CAAYE,MAAZ,EAAoB,CAApB,IAAyB,OAAzB,GAAmCE,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsB,CAAtB,CAAyB,GAAtE;AACD,KAFwB,CAAzB;AAME,SAAKI,QAAL,CAAc;AACZf,MAAAA,IADY;AAEZC,MAAAA,SAAS,EAAE,KAFC;AAGZC,MAAAA,QAAQ,EAAEO,IAHE;AAIZN,MAAAA,UAAU,EAAEW,MAJA;AAKZV,MAAAA,gBALY,CAOtB;AACA;;AARsB,KAAd,EAtBiB,CAkCjB;AACA;AACA;AAED;;AAMPY,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,KAAL,CAAWE,SAAX,GACC,gBADD,GAEC,eAHN,EAOG,KAAKF,KAAL,CAAWG,QAAX,CAAoBQ,GAApB,CAAwB,CAACO,GAAD,EAAMC,CAAN,KAAY;AACnC,aAAO,gBAAgBD,GAAG,CAAC,CAAD,CAA1B;AACD,KAFA,CAPH,EAWG,KAAKlB,KAAL,CAAWK,gBAXd,CADF;AAiBD;;AAzEyB;;AA2E5B,eAAeN,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    data: {},\n    isLoading: true,\n//    dateCut: '', \n    dataKeys: [],\n    dataValues: [],\n    QuestionResponse: \"\",\n}\n\n\n  async componentDidMount(){\n      //insert the current date in the url so we only display \n    const {data} = await axios(`https://opentdb.com/api.php?amount=10`)\n// go through all results (return objects)   \n      const results = data.results\n      console.log(\"RESULTS : \" + results)\n        // for each result go through all keys (return an array of keys)\n      const keys = results.map((result, i) => {\n        return Object.keys(result)\n      })\n        // for each result go through all values (return an array of results)\n\n        const values = results.map((result, i) => {\n          return Object.values(result)\n        })\n      \n        const QuestionResponse = results.map((result, i) => {\n          return `${Object.keys(result)[3] + \"  :  \" + Object.values(result)[3]} ` \n        })\n\n        \n    \n          this.setState({\n            data, \n            isLoading: false,\n            dataKeys: keys,\n            dataValues: values,\n            QuestionResponse\n            \n  //          categories: \n  //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n      \n          })\n\n          // const datasArray = data.results.map((result, i) => {\n          //   return ({...result})\n          // })\n\n        }\n\n    \n\n\n\n  render(){\n    return (\n      <div className=\"\">\n          {this.state.isLoading\n          ? \"IT DIDN'T LOAD\"\n          : \"IT HAS LOADED\"\n          }\n      {/* <Question results={this.state.data.results}/> */}\n        {/* \"THE CATEGORY : \" + this.state.data.results} */}\n        {this.state.dataKeys.map((key, y) => {\n          return \"MY FIELD : \" + key[3]\n        }\n        )}\n        {this.state.QuestionResponse}\n\n\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
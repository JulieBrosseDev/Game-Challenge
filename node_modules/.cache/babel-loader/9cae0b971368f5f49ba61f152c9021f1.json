{"ast":null,"code":"var _jsxFileName = \"/home/julie/game-challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      isLoading: true,\n      //    dateCut: '', \n      dataKeys: [],\n      dataValues: [],\n      questionResponseArray: [],\n      number: 0,\n      questions: [],\n      falseResponses: [],\n      trueResponses: []\n    };\n  }\n\n  async componentDidMount() {\n    //insert the current date in the url so we only display \n    const {\n      data\n    } = await axios(`https://opentdb.com/api.php?amount=10`); // go through all results (return objects)   \n\n    const results = data.results;\n    const questions = results.map((result, i) => {\n      return `${Object.values(result)[3]}`;\n    });\n    console.log(questions);\n    const falseResponses = results.map((result, i) => {\n      return `${Object.values(result)[5]}`;\n    });\n    const trueResponse = results.map((result, i) => {\n      return `${Object.values(result)[4]}`;\n    }); // console.log(keys)\n    //   // for each result go through all values (return an array of results)\n    //   const values = results.map((result, i) => {\n    //     return Object.values(result)[3]\n    //   })\n    //   const questionResponse = results.map((result) => {\n    //     return `${Object.values(result)[3]  +  \"    \" + Object.values(result)[4]}`\n    //   })\n\n    const setNumber = () => {\n      return this.state.number + 1;\n    };\n\n    this.setState({\n      data,\n      isLoading: false,\n      number: setNumber(),\n      //          dataKeys: keys,\n      //          dataValues: values,\n      //          questionResponseArray: questionResponse,\n      questions,\n      falseResponses,\n      trueResponse //          categories: \n      //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n\n    });\n    console.log(\"HELOOOOOOOOOOO\" + this.state.questionResponseArray[0]); // const datasArray = data.results.map((result, i) => {\n    //   return ({...result})\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? \"IT DIDN'T LOAD\" : \"IT HAS LOADED\", /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, this.state.questions[this.state.number]), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, this.state.falseResponses[this.state.number]), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, this.state.trueResponse[this.state.number]));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/julie/game-challenge/src/App.js"],"names":["React","Component","Question","axios","App","state","data","isLoading","dataKeys","dataValues","questionResponseArray","number","questions","falseResponses","trueResponses","componentDidMount","results","map","result","i","Object","values","console","log","trueResponse","setNumber","setState","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    data: {},\n    isLoading: true,\n//    dateCut: '', \n    dataKeys: [],\n    dataValues: [],\n    questionResponseArray: [],\n    number: 0,\n    questions: [],\n    falseResponses: [],\n    trueResponses: []\n}\n\n\n  async componentDidMount(){\n      //insert the current date in the url so we only display \n    const {data} = await axios(`https://opentdb.com/api.php?amount=10`)\n// go through all results (return objects)   \n      const results = data.results\n\n      const questions = results.map((result, i) => {\n      return `${Object.values(result)[3]}`\n    })\n\n      console.log(questions)\n\n      const falseResponses = results.map((result, i) => {\n        return `${Object.values(result)[5]}`\n      })\n\n      const trueResponse = results.map((result, i) => {\n        return `${Object.values(result)[4]}`\n      })\n\n\n\n\n      // console.log(keys)\n      //   // for each result go through all values (return an array of results)\n\n      //   const values = results.map((result, i) => {\n      //     return Object.values(result)[3]\n      //   })\n      \n      //   const questionResponse = results.map((result) => {\n      //     return `${Object.values(result)[3]  +  \"    \" + Object.values(result)[4]}`\n      //   })\n\n        const setNumber = () => {\n          return this.state.number + 1\n        }\n    \n          this.setState({\n            data, \n            isLoading: false,\n            number: setNumber(),\n  //          dataKeys: keys,\n  //          dataValues: values,\n  //          questionResponseArray: questionResponse,\n            questions,\n            falseResponses,\n            trueResponse\n            \n  //          categories: \n  //          dateCut: data[data.length-1].data_inici.substr(0,10).split('-').join(',')\n      \n          })\n\n          console.log(\"HELOOOOOOOOOOO\" + this.state.questionResponseArray[0])\n          // const datasArray = data.results.map((result, i) => {\n          //   return ({...result})\n          // })\n\n        }\n\n    \n\n\n\n  render(){\n    return (\n      <div className=\"\">\n          {this.state.isLoading\n          ? \"IT DIDN'T LOAD\"\n          : \"IT HAS LOADED\"\n          }\n      {/* <Question results={this.state.data.results}/> */}\n        {/* \"THE CATEGORY : \" + this.state.data.results} */}\n\n          <h1>{this.state.questions[this.state.number]}</h1>\n          <h1>{this.state.falseResponses[this.state.number]}</h1>\n          <h1>{this.state.trueResponse[this.state.number]}</h1>\n\n\n\n        {/* {this.state.questionResponse} */}\n\n\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
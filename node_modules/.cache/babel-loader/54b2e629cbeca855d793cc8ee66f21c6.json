{"ast":null,"code":"var _jsxFileName = \"/home/julie/game-challenge/src/App.js\";\nimport { Component, Fragment } from 'react';\nimport React from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      isLoading: true,\n      dataKeys: [],\n      dataValues: [],\n      questionsArray: [],\n      fakeAnswersArray: [],\n      trueAnswersArray: [],\n      number: 0,\n      counter: 0,\n      totalClicks: 0\n    };\n\n    this.setNumber = () => {\n      return this.state.number + 1;\n    };\n\n    this.answerPosition = () => {\n      const flexDirection = [\"row\", \"row-reverse\"];\n      const randomMonth = months[Math.floor(Math.random() * months.length)];\n      console.log(\"random month =>\", randomMonth);\n    };\n\n    this.answerValidation = () => {\n      const newCounter = this.state.counter + 1;\n      this.setState({\n        counter: newCounter,\n        number: this.setNumber(),\n        totalClicks: newCounter\n      });\n    };\n\n    this.gameRestart = () => {\n      this.setState({\n        data: {},\n        isLoading: true,\n        dataKeys: [],\n        dataValues: [],\n        questionsArray: [],\n        fakeAnswersArray: [],\n        trueAnswersArray: [],\n        number: 0,\n        counter: 0,\n        totalClicks: 0\n      });\n    };\n  }\n\n  async componentDidMount() {\n    //insert the current date in the url so we only display \n    const {\n      data\n    } = await axios(`https://opentdb.com/api.php?amount=10&type=boolean`); // go through all results (return objects)   \n\n    const results = data.results;\n    console.log(\"RESULTS : \" + results);\n    const keys = results.map((result, i) => {\n      return Object.keys(result);\n    });\n    console.log(keys);\n    const values = results.map((result, i) => {\n      return Object.values(result);\n    });\n    const questions = results.map(result => {\n      return `${Object.values(result)[3]}`;\n    });\n    const fakeAnswers = results.map(result => {\n      return `${Object.values(result)[5]}`;\n    });\n    const fakeAnswersArrays = fakeAnswers.map(answer => {\n      return answer.split(',');\n    });\n    const trueAnswers = results.map(result => {\n      return `${Object.values(result)[4]}`;\n    });\n    this.setState({\n      data,\n      isLoading: false,\n      dataKeys: keys,\n      dataValues: values,\n      questionsArray: questions,\n      fakeAnswersArray: fakeAnswersArrays,\n      trueAnswersArray: trueAnswers\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, this.state.totalClicks < 10 ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"COUNTER : \", this.state.counter), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, this.state.questionsArray[this.state.number]), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexDirection: this.randomPosition()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        order: this.answerPosition()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, this.state.fakeAnswersArray[this.state.number]), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.answerValidation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, this.state.trueAnswersArray[this.state.number]))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"GAME ENDED YOU have \", this.state.counter, \" points\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.componentDidMount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"RESTART\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/julie/game-challenge/src/App.js"],"names":["Component","Fragment","React","Question","axios","App","state","data","isLoading","dataKeys","dataValues","questionsArray","fakeAnswersArray","trueAnswersArray","number","counter","totalClicks","setNumber","answerPosition","flexDirection","randomMonth","months","Math","floor","random","length","console","log","answerValidation","newCounter","setState","gameRestart","componentDidMount","results","keys","map","result","i","Object","values","questions","fakeAnswers","fakeAnswersArrays","answer","split","trueAnswers","render","randomPosition","order"],"mappings":"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","sourcesContent":["import {Component, Fragment} from 'react';\nimport React from 'react';\nimport Question from './components/Question';\nimport axios from 'axios';\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    data: {},\n    isLoading: true,\n    dataKeys: [],\n    dataValues: [],\n    questionsArray: [],\n    fakeAnswersArray: [],\n    trueAnswersArray: [],\n    number: 0,\n    counter: 0,\n    totalClicks: 0,\n}\n\n\n\nsetNumber = () => {\n  return this.state.number + 1\n}\n\nanswerPosition = () => {\n  const flexDirection = [\"row\", \"row-reverse\"];\n  const randomMonth = months[Math.floor(Math.random() * months.length)];\n\nconsole.log(\"random month =>\", randomMonth);\n}\n\n\nanswerValidation = () => {\n  const newCounter = this.state.counter + 1\n  this.setState({\n    counter: newCounter,\n    number: this.setNumber(),\n    totalClicks: newCounter,\n  })\n}\n\n\ngameRestart = () => {\n  this.setState({\n      data: {},\n      isLoading: true,\n      dataKeys: [],\n      dataValues: [],\n      questionsArray: [],\n      fakeAnswersArray: [],\n      trueAnswersArray: [],\n      number: 0,\n      counter: 0,\n      totalClicks: 0\n  })\n}\n\n\n  async componentDidMount(){\n      //insert the current date in the url so we only display \n    const {data} = await axios(`https://opentdb.com/api.php?amount=10&type=boolean`)\n// go through all results (return objects)   \n      const results = data.results\n      console.log(\"RESULTS : \" + results)\n      const keys = results.map((result, i) => {\n        return Object.keys(result)\n      })\n\n      console.log(keys)\n\n        const values = results.map((result, i) => {\n          return Object.values(result)\n        })\n      \n        const questions = results.map((result) => {\n          return `${Object.values(result)[3]}`\n        })\n\n        const fakeAnswers = results.map((result) => {\n          return `${Object.values(result)[5]}`\n        })\n\n        const fakeAnswersArrays  = fakeAnswers.map(answer => {\n          return answer.split(',')\n        })        \n\n        const trueAnswers = results.map((result) => {\n          return `${Object.values(result)[4]}`\n        })\n\n\n\n          this.setState({\n            data, \n            isLoading: false,\n            dataKeys: keys,\n            dataValues: values,\n            questionsArray: questions,\n            fakeAnswersArray: fakeAnswersArrays,\n            trueAnswersArray: trueAnswers\n          })\n        }\n\n\n\n  render(){\n    return (\n      <div className=\"\">\n          {this.state.totalClicks < 10\n          ? \n          <Fragment>\n            <div>COUNTER : {this.state.counter}</div>\n            <h1>{this.state.questionsArray[this.state.number]}</h1>\n            <div style={{flexDirection: this.randomPosition()}}>\n              <div style={{order: this.answerPosition()}}>{this.state.fakeAnswersArray[this.state.number]}</div>\n              <div onClick={this.answerValidation}>{this.state.trueAnswersArray[this.state.number]}</div>\n            </div>\n          </Fragment>\n          : <div>\n              <p>GAME ENDED YOU have {this.state.counter} points</p>\n              <button onClick={this.componentDidMount}>RESTART</button>\n            </div>\n          }\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}